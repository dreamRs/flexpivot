[{"path":"https://dreamrs.github.io/flexpivot/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://dreamrs.github.io/flexpivot/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://dreamrs.github.io/flexpivot/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://dreamrs.github.io/flexpivot/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://dreamrs.github.io/flexpivot/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://dreamrs.github.io/flexpivot/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://dreamrs.github.io/flexpivot/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://dreamrs.github.io/flexpivot/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://dreamrs.github.io/flexpivot/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://dreamrs.github.io/flexpivot/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://dreamrs.github.io/flexpivot/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://dreamrs.github.io/flexpivot/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://dreamrs.github.io/flexpivot/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://dreamrs.github.io/flexpivot/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://dreamrs.github.io/flexpivot/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://dreamrs.github.io/flexpivot/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://dreamrs.github.io/flexpivot/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://dreamrs.github.io/flexpivot/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://dreamrs.github.io/flexpivot/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://dreamrs.github.io/flexpivot/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://dreamrs.github.io/flexpivot/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2020 Victor PERRIER  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. flexpivot Copyright (C) 2020 Victor PERRIER This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://dreamrs.github.io/flexpivot/articles/flexpivot.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"flexpivot","text":"Get count percentage one variable: category N % Chemistry 184 19.4% Economic Sciences 84 8.8% Literature 116 12.2% Peace 134 14.1% Physics 213 22.4% Physiology Medicine 219 23% Total 950 100% Add second variable row col :  gender  category Statistic male female <missing> Total Chemistry N 179 5 0 184 % 18.8% 0.5% 0% 19.4% Col % 20.6% 9.3% 0% 19.4% Row % 97.3% 2.7% 0% 100% Economic Sciences N 82 2 0 84 % 8.6% 0.2% 0% 8.8% Col % 9.4% 3.7% 0% 8.8% Row % 97.6% 2.4% 0% 100% Literature N 101 15 0 116 % 10.6% 1.6% 0% 12.2% Col % 11.6% 27.8% 0% 12.2% Row % 87.1% 12.9% 0% 100% Peace N 90 17 27 134 % 9.5% 1.8% 2.8% 14.1% Col % 10.4% 31.5% 100% 14.1% Row % 67.2% 12.7% 20.1% 100% Physics N 210 3 0 213 % 22.1% 0.3% 0% 22.4% Col % 24.2% 5.6% 0% 22.4% Row % 98.6% 1.4% 0% 100% Physiology Medicine N 207 12 0 219 % 21.8% 1.3% 0% 23% Col % 23.8% 22.2% 0% 23% Row % 94.5% 5.5% 0% 100% Total N 869 54 27 950 % 91.5% 5.7% 2.8% 100% Col % 100% 100% 100% 100% Row % 91.5% 5.7% 2.8% 100% category gender N % Chemistry male 179 18.8% female 5 0.5% <missing> 0 0% Economic Sciences male 82 8.6% female 2 0.2% <missing> 0 0% Literature male 101 10.6% female 15 1.6% <missing> 0 0% Peace male 90 9.5% female 17 1.8% <missing> 27 2.8% Physics male 210 22.1% female 3 0.3% <missing> 0 0% Physiology Medicine male 207 21.8% female 12 1.3% <missing> 0 0%","code":"nobel_laureates %>%   pivot_table(\"category\") %>%   pivot_format() nobel_laureates %>%   pivot_table(\"category\", \"gender\") %>%   pivot_format() nobel_laureates %>%   pivot_table(c(\"category\", \"gender\"), total = FALSE) %>%   pivot_format()"},{"path":"https://dreamrs.github.io/flexpivot/articles/flexpivot.html","id":"customize","dir":"Articles","previous_headings":"","what":"Customize","title":"flexpivot","text":"Change color labels : Nobel category Count Percentage Chemistry 184 19.4% Economic Sciences 84 8.8% Literature 116 12.2% Peace 134 14.1% Physics 213 22.4% Physiology Medicine 219 23% Total 950 100%","code":"nobel_laureates %>%   pivot_table(\"category\") %>%   pivot_format(     background = \"#D8DEE9\",     color = \"#3B4252\",     labels = pivot_labels(       n = \"Count\",       p = \"Percentage\",       rows = \"Nobel category\"     )   )"},{"path":"https://dreamrs.github.io/flexpivot/articles/flexpivot.html","id":"export","dir":"Articles","previous_headings":"","what":"Export","title":"flexpivot","text":"Export pivot table Word, PowerPoint Excel:","code":"pt <- pivot_table(   data = nobel_laureates,   \"category\", \"gender\",    total = FALSE,   stats = c(\"n\", \"p\") )  # PowerPoint export_pptx(pt, \"my-presentation.pptx\")  # Word export_docx(pt, \"my-document.docx\")  # Excel export_xlsx(pt, \"my-workbook.xlsx\")"},{"path":"https://dreamrs.github.io/flexpivot/articles/flexpivot.html","id":"shiny","dir":"Articles","previous_headings":"","what":"Shiny","title":"flexpivot","text":"Use shiny pivotOutput() renderPivot(), menu automatically added export pivot table (can disabled allow specific export ):","code":"library(shiny) library(flexpivot) data(\"nobel_laureates\")  ui <- fluidPage(   tags$h2(\"Pivot table in Shiny\"),   pivotOutput(\"pivot\") )  server <- function(input, output, session) {      output$pivot <- renderPivot({     pivot_table(nobel_laureates, \"category\", \"birth_continent\", stats = c(\"n\", \"p\"))   }, background = \"#A3BE8C\")    }  shinyApp(ui, server)"},{"path":"https://dreamrs.github.io/flexpivot/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Victor Perrier. Author, maintainer, copyright holder. Fanny Meyer. Author. Zeno Rocha. Copyright holder.            author clipboard JavaScript library","code":""},{"path":"https://dreamrs.github.io/flexpivot/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Perrier V, Meyer F (2021). flexpivot: Easy Pivot Table. R package version 0.1.2, https://dreamrs.github.io/flexpivot/.","code":"@Manual{,   title = {flexpivot: Easy Pivot Table},   author = {Victor Perrier and Fanny Meyer},   year = {2021},   note = {R package version 0.1.2},   url = {https://dreamrs.github.io/flexpivot/}, }"},{"path":"https://dreamrs.github.io/flexpivot/index.html","id":"flexpivot","dir":"","previous_headings":"","what":"Easy Pivot Table","title":"Easy Pivot Table","text":"{flextable} extension create ready--use frequency tables shiny rmarkdown, easily exportable Word, PowerPoint Excel.","code":""},{"path":"https://dreamrs.github.io/flexpivot/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Easy Pivot Table","text":"can install development version {flexpivot} GitHub :","code":"remotes::install_github(\"dreamRs/flexpivot\")"},{"path":"https://dreamrs.github.io/flexpivot/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Easy Pivot Table","text":"examples available vignette : https://dreamrs.github.io/flexpivot/articles/flexpivot.html","code":"library(flexpivot) library(magrittr)  nobel_laureates %>%   subset(category %in% c(\"Chemistry\", \"Physics\")) %>%    pivot_table(\"category\", \"gender\") %>%   pivot_format()"},{"path":"https://dreamrs.github.io/flexpivot/index.html","id":"related-packages","dir":"","previous_headings":"","what":"Related packages","title":"Easy Pivot Table","text":"crosstable & crosstableAssistant makes easy calculate descriptive statistics export Office nice Shiny app create tables interactively.","code":""},{"path":"https://dreamrs.github.io/flexpivot/reference/export-pivot.html","id":null,"dir":"Reference","previous_headings":"","what":"Export pivot table — export-pivot","title":"Export pivot table — export-pivot","text":"Export formated pivot table PowerPoint, Word Excel document.","code":""},{"path":"https://dreamrs.github.io/flexpivot/reference/export-pivot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export pivot table — export-pivot","text":"","code":"export(x, output, to = c(\"pptx\", \"docx\", \"xlsx\"), ...)  export_pptx(x, output, ...)  export_docx(x, output, ...)  export_xlsx(x, output, label_value = \"value\", ...)"},{"path":"https://dreamrs.github.io/flexpivot/reference/export-pivot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export pivot table — export-pivot","text":"x pivot_table pivot_format object. output Path generate file. Output document: \"pptx\" (PowerPoint), \"docx\" (Word) \"xlsx\" (Excel). ... Arguments passed pivot_format x formated yet. label_value Excel output, label variable containing values.","code":""},{"path":"https://dreamrs.github.io/flexpivot/reference/export-pivot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export pivot table — export-pivot","text":"Path output (invisibly).","code":""},{"path":"https://dreamrs.github.io/flexpivot/reference/export-pivot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export pivot table — export-pivot","text":"","code":"library(flexpivot) data(\"nobel_laureates\")  pt <- pivot_table(nobel_laureates, rows = \"category\", cols = \"gender\")  # To PowerPoint path_pptx <- tempfile(fileext = \".pptx\") export_pptx(pt, path_pptx) browseURL(path_pptx)   # To Word path_docx <- tempfile(fileext = \".docx\") export_docx(pt, path_docx) browseURL(path_docx)   # To Excel path_xlsx <- tempfile(fileext = \".xlsx\") export_xlsx(pt, path_xlsx) browseURL(path_xlsx)   # Clean up unlink(path_pptx) unlink(path_docx) unlink(path_xlsx)"},{"path":"https://dreamrs.github.io/flexpivot/reference/nobel_laureates.html","id":null,"dir":"Reference","previous_headings":"","what":"Nobel laureates — nobel_laureates","title":"Nobel laureates — nobel_laureates","text":"Dataset containing Nobel Prize winners information .","code":""},{"path":"https://dreamrs.github.io/flexpivot/reference/nobel_laureates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nobel laureates — nobel_laureates","text":"","code":"nobel_laureates"},{"path":"https://dreamrs.github.io/flexpivot/reference/nobel_laureates.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Nobel laureates — nobel_laureates","text":"data frame 950 rows 10 variables: id Unique id (laureate) name Name laureate gender Laureate's gender person birth_date Birth date Laureate person birth_continent Laureate's continent birth person year year Nobel Prize awarded category Nobel Prize category. award_portion Awarded portion Nobel laureate_type Organization individual laureate","code":""},{"path":"https://dreamrs.github.io/flexpivot/reference/nobel_laureates.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Nobel laureates — nobel_laureates","text":"Nobel Prize API https://www.nobelprize.org/","code":""},{"path":"https://dreamrs.github.io/flexpivot/reference/pivot-shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Pivot table Output in Shiny — pivot-shiny","title":"Pivot table Output in Shiny — pivot-shiny","text":"Display pivot_table Shiny: pivotOutput / renderPivot: adds button download pivot table PowerPoint, Word Excel. pivot2Output / renderPivot2: display pivot table.","code":""},{"path":"https://dreamrs.github.io/flexpivot/reference/pivot-shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pivot table Output in Shiny — pivot-shiny","text":"","code":"pivot2Output(outputId, width = \"100%\", ...)  renderPivot2(   expr,   width = 1,   background = \"#81A1C1\",   color = \"#FFFFFF\",   border = \"#FFFFFF\",   font_size = 14,   font_name = NULL,   labels = pivot_labels(),   formatter = pivot_formatter(),   env = parent.frame(),   quoted = FALSE )  pivotOutput(outputId, width = \"100%\", export = export_labels(), ...)  export_labels(   export = \"Export\",   clipboard = \"Copy to clipboard\",   powerpoint = \"Export to PowerPoint\",   word = \"Export to Word\",   excel = \"Export to Excel\" )  renderPivot(   expr,   width = 1,   background = \"#81A1C1\",   color = \"#FFFFFF\",   border = \"#FFFFFF\",   font_size = 11,   font_name = NULL,   labels = pivot_labels(),   formatter = pivot_formatter(),   label_value = \"value\",   env = parent.frame(),   quoted = FALSE,   filename = \"export-pivot\" )"},{"path":"https://dreamrs.github.io/flexpivot/reference/pivot-shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pivot table Output in Shiny — pivot-shiny","text":"outputId Output variable read . width Value preferred width table percent ([0,1]). ... arguments pass container tag function. useful providing additional classes tag. expr expression generates pivot_table. background Background color header column(s) containing row(s). color Text color header column(s) containing row(s). border Border color (applies table). font_size Font size (applies table). font_name Font name (applies table). labels Custom labels statistics, see pivot_labels. formatter Function format content, see pivot_formatter. env environment evaluate expr. quoted expr quoted expression (quote())? useful want save expression variable. export Export labels, use NULL disable exports. clipboard, powerpoint, word, excel Labels display export menu, use NULL disable specific format. label_value Excel output, label variable containing values. filename string filename export WITHOUT extension, added accordint type export.","code":""},{"path":"https://dreamrs.github.io/flexpivot/reference/pivot-shiny.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pivot table Output in Shiny — pivot-shiny","text":"HTML output element can included Shiny UI.","code":""},{"path":"https://dreamrs.github.io/flexpivot/reference/pivot-shiny.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pivot table Output in Shiny — pivot-shiny","text":"","code":"library(shiny) library(flexpivot) data(\"nobel_laureates\")  ui <- fluidPage(   tags$h2(\"Pivot table in Shiny\"),   fluidRow(     column(       width = 6,       selectInput(         inputId = \"row\",         label = \"Row\",         choices = c(\"category\", \"gender\", \"birth_continent\", \"laureate_type\"),         width = \"100%\"       )     ),     column(       width = 6,       selectInput(         inputId = \"col\",         label = \"Col\",         choices = c(\"category\", \"gender\", \"birth_continent\", \"laureate_type\"),         selected = \"gender\",         width = \"100%\"       )     )   ),   pivotOutput(\"pivot\") )  server <- function(input, output, session) {    output$pivot <- renderPivot({     pivot_table(nobel_laureates, input$row, input$col)   }, background = \"#A3BE8C\")  }  if (interactive())   shinyApp(ui, server)"},{"path":"https://dreamrs.github.io/flexpivot/reference/pivot_addin.html","id":null,"dir":"Reference","previous_headings":"","what":"Pivot table RStudio addin — pivot_addin","title":"Pivot table RStudio addin — pivot_addin","text":"Pivot table RStudio addin","code":""},{"path":"https://dreamrs.github.io/flexpivot/reference/pivot_addin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pivot table RStudio addin — pivot_addin","text":"","code":"pivot_addin(data)"},{"path":"https://dreamrs.github.io/flexpivot/reference/pivot_addin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pivot table RStudio addin — pivot_addin","text":"data data.frame.","code":""},{"path":"https://dreamrs.github.io/flexpivot/reference/pivot_addin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pivot table RStudio addin — pivot_addin","text":"value.","code":""},{"path":"https://dreamrs.github.io/flexpivot/reference/pivot_addin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pivot table RStudio addin — pivot_addin","text":"","code":"if (interactive()) {    library(flexpivot)   data(\"nobel_laureates\")   pivot_addin(nobel_laureates)  }"},{"path":"https://dreamrs.github.io/flexpivot/reference/pivot_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Flextable format for pivot_table — pivot_format","title":"Flextable format for pivot_table — pivot_format","text":"Flextable format pivot_table","code":""},{"path":"https://dreamrs.github.io/flexpivot/reference/pivot_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flextable format for pivot_table — pivot_format","text":"","code":"pivot_format(   pivot,   background = \"#81A1C1\",   color = \"#FFFFFF\",   border = \"#FFFFFF\",   font_size = 11,   font_name = NULL,   labels = pivot_labels(),   formatter = pivot_formatter(),   zebra_style = c(\"classic\", \"stats\", \"none\"),   zebra_color = \"#ECEFF4\",   drop_stats = FALSE,   keep_data = TRUE )"},{"path":"https://dreamrs.github.io/flexpivot/reference/pivot_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flextable format for pivot_table — pivot_format","text":"pivot pivot_table object. background Background color header column(s) containing row(s). color Text color header column(s) containing row(s). border Border color (applies table). font_size Font size (applies table). font_name Font name (applies table). labels Custom labels statistics, see pivot_labels. formatter Function format content, see pivot_formatter. zebra_style Add zebra theme table. zebra_color Color use zebra theme. drop_stats Drop stats column, can useful one stat show. keep_data Keep data attribute, can useful retrieve data table formatted.","code":""},{"path":"https://dreamrs.github.io/flexpivot/reference/pivot_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flextable format for pivot_table — pivot_format","text":"flextable object.","code":""},{"path":"https://dreamrs.github.io/flexpivot/reference/pivot_format.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flextable format for pivot_table — pivot_format","text":"","code":"library(flexpivot) library(magrittr) data(\"nobel_laureates\")  # With two variables nobel_laureates %>%   pivot_table(\"category\", \"gender\") %>%   pivot_format() #> a flextable object. #> col_keys: `category`, `Statistic`, `male`, `female`, `<missing>`, `Total`  #> header has 2 row(s)  #> body has 28 row(s)  #> original dataset sample:  #>            category Statistic  male female <missing> Total #> 1         Chemistry         N   179      5         0   184 #> 2         Chemistry         % 18.8%   0.5%        0% 19.4% #> 3         Chemistry     Col % 20.6%   9.3%        0% 19.4% #> 4         Chemistry     Row % 97.3%   2.7%        0%  100% #> 5 Economic Sciences         N    82      2         0    84  # Only count nobel_laureates %>%   pivot_table(\"category\", \"gender\", stats = \"n\") %>%   pivot_format(drop_stats = TRUE) #> a flextable object. #> col_keys: `category`, `male`, `female`, `<missing>`, `Total`  #> header has 2 row(s)  #> body has 7 row(s)  #> original dataset sample:  #>            category Statistic male female <missing> Total #> 1         Chemistry         N  179      5         0   184 #> 2 Economic Sciences         N   82      2         0    84 #> 3        Literature         N  101     15         0   116 #> 4             Peace         N   90     17        27   134 #> 5           Physics         N  210      3         0   213  # Only percent nobel_laureates %>%   pivot_table(\"category\", \"gender\", stats = \"p\") %>%   pivot_format() #> a flextable object. #> col_keys: `category`, `Statistic`, `male`, `female`, `<missing>`, `Total`  #> header has 2 row(s)  #> body has 7 row(s)  #> original dataset sample:  #>            category Statistic  male female <missing> Total #> 1         Chemistry         % 18.8%   0.5%        0% 19.4% #> 2 Economic Sciences         %  8.6%   0.2%        0%  8.8% #> 3        Literature         % 10.6%   1.6%        0% 12.2% #> 4             Peace         %  9.5%   1.8%      2.8% 14.1% #> 5           Physics         % 22.1%   0.3%        0% 22.4%   # Two variable as rows nobel_laureates %>%   pivot_table(c(\"birth_continent\", \"gender\"), \"category\", stats = \"p\") %>%   pivot_format() #> a flextable object. #> col_keys: `birth_continent`, `gender`, `Statistic`, `Chemistry`, `Economic Sciences`, `Literature`, `Peace`, `Physics`, `Physiology or Medicine`, `Total`  #> header has 2 row(s)  #> body has 32 row(s)  #> original dataset sample:  #>   birth_continent    gender Statistic Chemistry Economic Sciences Literature #> 1          Europe      male         %     10.6%                3%       7.5% #> 2          Europe    female         %      0.2%              0.1%       0.9% #> 3          Europe <missing>         %        0%                0%         0% #> 4          Europe     Total         %     10.8%              3.2%       8.4% #> 5         Oceania      male         %      0.3%                0%         0% #>   Peace Physics Physiology or Medicine Total #> 1    5%   11.8%                  11.5% 49.5% #> 2  0.5%    0.2%                   0.5%  2.5% #> 3    0%      0%                     0%    0% #> 4  5.6%     12%                    12%   52% #> 5  0.2%    0.2%                   0.7%  1.5%   # Without cols pivot_format(pivot_table(nobel_laureates, rows = \"category\")) #> a flextable object. #> col_keys: `category`, `N`, `%`  #> header has 1 row(s)  #> body has 7 row(s)  #> original dataset sample:  #>            category   N     % #> 1         Chemistry 184 19.4% #> 2 Economic Sciences  84  8.8% #> 3        Literature 116 12.2% #> 4             Peace 134 14.1% #> 5           Physics 213 22.4% pivot_format(pivot_table(nobel_laureates, rows = c(\"category\", \"gender\"))) #> a flextable object. #> col_keys: `category`, `gender`, `N`, `%`  #> header has 1 row(s)  #> body has 28 row(s)  #> original dataset sample:  #>            category    gender   N     % #> 1         Chemistry      male 179 18.8% #> 2         Chemistry    female   5  0.5% #> 3         Chemistry <missing>   0    0% #> 4         Chemistry     Total 184 19.4% #> 5 Economic Sciences      male  82  8.6%   # Customize nobel_laureates %>%   pivot_table(\"category\") %>%   pivot_format(     background = \"#A3BE8C\",     labels = pivot_labels(n = \"Count\", p = \"Percentage\")   ) #> a flextable object. #> col_keys: `category`, `Count`, `Percentage`  #> header has 1 row(s)  #> body has 7 row(s)  #> original dataset sample:  #>            category Count Percentage #> 1         Chemistry   184      19.4% #> 2 Economic Sciences    84       8.8% #> 3        Literature   116      12.2% #> 4             Peace   134      14.1% #> 5           Physics   213      22.4%"},{"path":"https://dreamrs.github.io/flexpivot/reference/pivot_formatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Formatters for pivot_format — pivot_formatter","title":"Formatters for pivot_format — pivot_formatter","text":"Formatters pivot_format","code":""},{"path":"https://dreamrs.github.io/flexpivot/reference/pivot_formatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Formatters for pivot_format — pivot_formatter","text":"","code":"pivot_formatter(   n = round,   p = function(x) {     paste0(round(x, 1), \"%\") },   p_col = function(x) {     paste0(round(x, 1), \"%\") },   p_row = function(x) {     paste0(round(x, 1), \"%\") } )"},{"path":"https://dreamrs.github.io/flexpivot/reference/pivot_formatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Formatters for pivot_format — pivot_formatter","text":"n Function, applied n. p Function, applied p. p_col Function, applied p_col. p_row Function, applied p_row.","code":""},{"path":"https://dreamrs.github.io/flexpivot/reference/pivot_formatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Formatters for pivot_format — pivot_formatter","text":"list functions can use pivot_format.","code":""},{"path":"https://dreamrs.github.io/flexpivot/reference/pivot_formatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Formatters for pivot_format — pivot_formatter","text":"","code":"library(flexpivot) data(\"nobel_laureates\")  # One variable pt <- pivot_table(nobel_laureates, rows = \"category\")  pivot_format(pt) #> a flextable object. #> col_keys: `category`, `N`, `%`  #> header has 1 row(s)  #> body has 7 row(s)  #> original dataset sample:  #>            category   N     % #> 1         Chemistry 184 19.4% #> 2 Economic Sciences  84  8.8% #> 3        Literature 116 12.2% #> 4             Peace 134 14.1% #> 5           Physics 213 22.4% pivot_format(pt, formatter = pivot_formatter(   n = function(x) {     format(round(x * 100), big.mark = \" \")   } )) #> a flextable object. #> col_keys: `category`, `N`, `%`  #> header has 1 row(s)  #> body has 7 row(s)  #> original dataset sample:  #>            category      N     % #> 1         Chemistry 18 400 19.4% #> 2 Economic Sciences  8 400  8.8% #> 3        Literature 11 600 12.2% #> 4             Peace 13 400 14.1% #> 5           Physics 21 300 22.4%   # Two variable as rows pt <- pivot_table(nobel_laureates, rows = c(\"category\", \"gender\"))  pivot_format(pt) #> a flextable object. #> col_keys: `category`, `gender`, `N`, `%`  #> header has 1 row(s)  #> body has 28 row(s)  #> original dataset sample:  #>            category    gender   N     % #> 1         Chemistry      male 179 18.8% #> 2         Chemistry    female   5  0.5% #> 3         Chemistry <missing>   0    0% #> 4         Chemistry     Total 184 19.4% #> 5 Economic Sciences      male  82  8.6% pivot_format(pt, formatter = pivot_formatter(   n = function(x) {     format(round(x * 100), big.mark = \" \")   } )) #> a flextable object. #> col_keys: `category`, `gender`, `N`, `%`  #> header has 1 row(s)  #> body has 28 row(s)  #> original dataset sample:  #>            category    gender      N     % #> 1         Chemistry      male 17 900 18.8% #> 2         Chemistry    female    500  0.5% #> 3         Chemistry <missing>      0    0% #> 4         Chemistry     Total 18 400 19.4% #> 5 Economic Sciences      male  8 200  8.6%    # One row, one column pt <- pivot_table(nobel_laureates, rows = \"category\", cols = \"gender\")  pivot_format(pt) #> a flextable object. #> col_keys: `category`, `Statistic`, `male`, `female`, `<missing>`, `Total`  #> header has 2 row(s)  #> body has 28 row(s)  #> original dataset sample:  #>            category Statistic  male female <missing> Total #> 1         Chemistry         N   179      5         0   184 #> 2         Chemistry         % 18.8%   0.5%        0% 19.4% #> 3         Chemistry     Col % 20.6%   9.3%        0% 19.4% #> 4         Chemistry     Row % 97.3%   2.7%        0%  100% #> 5 Economic Sciences         N    82      2         0    84 pivot_format(pt, formatter = pivot_formatter(   n = function(x) {     format(round(x * 100), big.mark = \" \")   } )) #> a flextable object. #> col_keys: `category`, `Statistic`, `male`, `female`, `<missing>`, `Total`  #> header has 2 row(s)  #> body has 28 row(s)  #> original dataset sample:  #>            category Statistic   male female <missing>  Total #> 1         Chemistry         N 17 900    500         0 18 400 #> 2         Chemistry         %  18.8%   0.5%        0%  19.4% #> 3         Chemistry     Col %  20.6%   9.3%        0%  19.4% #> 4         Chemistry     Row %  97.3%   2.7%        0%   100% #> 5 Economic Sciences         N  8 200    200         0  8 400"},{"path":"https://dreamrs.github.io/flexpivot/reference/pivot_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Labels for pivot_format — pivot_labels","title":"Labels for pivot_format — pivot_labels","text":"Labels pivot_format","code":""},{"path":"https://dreamrs.github.io/flexpivot/reference/pivot_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Labels for pivot_format — pivot_labels","text":"","code":"pivot_labels(   stats = \"Statistic\",   n = \"N\",   p = \"%\",   p_col = \"Col %\",   p_row = \"Row %\",   rows = NULL,   cols = NULL )"},{"path":"https://dreamrs.github.io/flexpivot/reference/pivot_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Labels for pivot_format — pivot_labels","text":"stats Name statistics column. n Count. p Percentage. p_col Column perc. p_row Row perc. rows, cols Labels variables use rows/cols.","code":""},{"path":"https://dreamrs.github.io/flexpivot/reference/pivot_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Labels for pivot_format — pivot_labels","text":"list can use pivot_format.","code":""},{"path":"https://dreamrs.github.io/flexpivot/reference/pivot_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Labels for pivot_format — pivot_labels","text":"","code":"library(flexpivot) library(magrittr) data(\"nobel_laureates\")  # Change labels displayed in table nobel_laureates %>%   pivot_table(\"category\", \"gender\", na_label = \"Manquant\") %>%   pivot_format(     labels = pivot_labels(       stats = \"Statistique\",       n = \"Effectif\",       p = \"Pourcentage\",       p_col = \"% colonne\",       p_row = \"% ligne\",       rows = c(\"Categorie\"),       cols = \"Genre\"     )   ) #> a flextable object. #> col_keys: `Categorie`, `Statistique`, `male`, `female`, `Manquant`, `Total`  #> header has 2 row(s)  #> body has 28 row(s)  #> original dataset sample:  #>           Categorie Statistique  male female Manquant Total #> 1         Chemistry    Effectif   179      5        0   184 #> 2         Chemistry Pourcentage 18.8%   0.5%       0% 19.4% #> 3         Chemistry   % colonne 20.6%   9.3%       0% 19.4% #> 4         Chemistry     % ligne 97.3%   2.7%       0%  100% #> 5 Economic Sciences    Effectif    82      2        0    84"},{"path":"https://dreamrs.github.io/flexpivot/reference/pivot_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a pivot table — pivot_table","title":"Create a pivot table — pivot_table","text":"Create pivot table","code":""},{"path":"https://dreamrs.github.io/flexpivot/reference/pivot_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a pivot table — pivot_table","text":"","code":"pivot_table(   data,   rows,   cols = NULL,   wt = NULL,   stats = c(\"n\", \"p\", \"p_row\", \"p_col\"),   digits = 2,   total = TRUE,   total_label = \"Total\",   na_label = \"<missing>\",   complete = TRUE )"},{"path":"https://dreamrs.github.io/flexpivot/reference/pivot_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a pivot table — pivot_table","text":"data data.frame. rows Character vector variable(s) use rows. cols Character vector variable(s) use columns. wt Character, variable use weights . stats Statistic(s) compute. digits Integer indicating number decimal places used. total Logical, add total . total_label Label use fo total. na_label Label use missing values. complete Complete missing combination rows several cols .","code":""},{"path":"https://dreamrs.github.io/flexpivot/reference/pivot_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a pivot table — pivot_table","text":"data.table","code":""},{"path":"https://dreamrs.github.io/flexpivot/reference/pivot_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a pivot table — pivot_table","text":"","code":"library(flexpivot) data(\"nobel_laureates\")  # One variable pivot_table(nobel_laureates, rows = \"category\") #>                  category   n      p #> 1:              Chemistry 184  19.37 #> 2:      Economic Sciences  84   8.84 #> 3:             Literature 116  12.21 #> 4:                  Peace 134  14.11 #> 5:                Physics 213  22.42 #> 6: Physiology or Medicine 219  23.05 #> 7:                  Total 950 100.00  # With two variables pivot_table(nobel_laureates, rows = \"category\", cols = \"birth_continent\") #>                   category stats Europe Oceania North America Africa   Asia #>  1:              Chemistry     n 103.00    3.00         59.00   3.00  16.00 #>  2:              Chemistry     p  10.84    0.32          6.21   0.32   1.68 #>  3:              Chemistry p_col  20.85   20.00         19.41  11.11  22.22 #>  4:              Chemistry p_row  55.98    1.63         32.07   1.63   8.70 #>  5:      Economic Sciences     n  30.00    0.00         51.00   0.00   3.00 #>  6:      Economic Sciences     p   3.16    0.00          5.37   0.00   0.32 #>  7:      Economic Sciences p_col   6.07    0.00         16.78   0.00   4.17 #>  8:      Economic Sciences p_row  35.71    0.00         60.71   0.00   3.57 #>  9:             Literature     n  80.00    0.00         16.00   6.00  10.00 #> 10:             Literature     p   8.42    0.00          1.68   0.63   1.05 #> 11:             Literature p_col  16.19    0.00          5.26  22.22  13.89 #> 12:             Literature p_row  68.97    0.00         13.79   5.17   8.62 #> 13:                  Peace     n  53.00    2.00         23.00  13.00  13.00 #> 14:                  Peace     p   5.58    0.21          2.42   1.37   1.37 #> 15:                  Peace p_col  10.73   13.33          7.57  48.15  18.06 #> 16:                  Peace p_row  39.55    1.49         17.16   9.70   9.70 #> 17:                Physics     n 114.00    2.00         75.00   2.00  20.00 #> 18:                Physics     p  12.00    0.21          7.89   0.21   2.11 #> 19:                Physics p_col  23.08   13.33         24.67   7.41  27.78 #> 20:                Physics p_row  53.52    0.94         35.21   0.94   9.39 #> 21: Physiology or Medicine     n 114.00    8.00         80.00   3.00  10.00 #> 22: Physiology or Medicine     p  12.00    0.84          8.42   0.32   1.05 #> 23: Physiology or Medicine p_col  23.08   53.33         26.32  11.11  13.89 #> 24: Physiology or Medicine p_row  52.05    3.65         36.53   1.37   4.57 #> 25:                  Total     n 494.00   15.00        304.00  27.00  72.00 #> 26:                  Total     p  52.00    1.58         32.00   2.84   7.58 #> 27:                  Total p_col 100.00  100.00        100.00 100.00 100.00 #> 28:                  Total p_row  52.00    1.58         32.00   2.84   7.58 #>                   category stats Europe Oceania North America Africa   Asia #>     South America <missing>  Total #>  1:          0.00      0.00 184.00 #>  2:          0.00      0.00  19.37 #>  3:          0.00      0.00  19.37 #>  4:          0.00      0.00 100.00 #>  5:          0.00      0.00  84.00 #>  6:          0.00      0.00   8.84 #>  7:          0.00      0.00   8.84 #>  8:          0.00      0.00 100.00 #>  9:          4.00      0.00 116.00 #> 10:          0.42      0.00  12.21 #> 11:         36.36      0.00  12.21 #> 12:          3.45      0.00 100.00 #> 13:          3.00     27.00 134.00 #> 14:          0.32      2.84  14.11 #> 15:         27.27    100.00  14.11 #> 16:          2.24     20.15 100.00 #> 17:          0.00      0.00 213.00 #> 18:          0.00      0.00  22.42 #> 19:          0.00      0.00  22.42 #> 20:          0.00      0.00 100.00 #> 21:          4.00      0.00 219.00 #> 22:          0.42      0.00  23.05 #> 23:         36.36      0.00  23.05 #> 24:          1.83      0.00 100.00 #> 25:         11.00     27.00 950.00 #> 26:          1.16      2.84 100.00 #> 27:        100.00    100.00 100.00 #> 28:          1.16      2.84 100.00 #>     South America <missing>  Total  # Only count pivot_table(nobel_laureates, rows = \"category\", cols = \"gender\", stats = \"n\") #>                  category stats male female <missing> Total #> 1:              Chemistry     n  179      5         0   184 #> 2:      Economic Sciences     n   82      2         0    84 #> 3:             Literature     n  101     15         0   116 #> 4:                  Peace     n   90     17        27   134 #> 5:                Physics     n  210      3         0   213 #> 6: Physiology or Medicine     n  207     12         0   219 #> 7:                  Total     n  869     54        27   950  # Only percent pivot_table(nobel_laureates, rows = \"category\", cols = \"gender\", stats = \"p\") #>                  category stats  male female <missing>  Total #> 1:              Chemistry     p 18.84   0.53      0.00  19.37 #> 2:      Economic Sciences     p  8.63   0.21      0.00   8.84 #> 3:             Literature     p 10.63   1.58      0.00  12.21 #> 4:                  Peace     p  9.47   1.79      2.84  14.11 #> 5:                Physics     p 22.11   0.32      0.00  22.42 #> 6: Physiology or Medicine     p 21.79   1.26      0.00  23.05 #> 7:                  Total     p 91.47   5.68      2.84 100.00  # Without total pivot_table(nobel_laureates, rows = \"category\", cols = \"gender\", total = FALSE) #>                   category stats   male female <missing> #>  1:              Chemistry     n 179.00   5.00      0.00 #>  2:              Chemistry     p  18.84   0.53      0.00 #>  3:              Chemistry p_col  20.60   9.26      0.00 #>  4:              Chemistry p_row  97.28   2.72      0.00 #>  5:      Economic Sciences     n  82.00   2.00      0.00 #>  6:      Economic Sciences     p   8.63   0.21      0.00 #>  7:      Economic Sciences p_col   9.44   3.70      0.00 #>  8:      Economic Sciences p_row  97.62   2.38      0.00 #>  9:             Literature     n 101.00  15.00      0.00 #> 10:             Literature     p  10.63   1.58      0.00 #> 11:             Literature p_col  11.62  27.78      0.00 #> 12:             Literature p_row  87.07  12.93      0.00 #> 13:                  Peace     n  90.00  17.00     27.00 #> 14:                  Peace     p   9.47   1.79      2.84 #> 15:                  Peace p_col  10.36  31.48    100.00 #> 16:                  Peace p_row  67.16  12.69     20.15 #> 17:                Physics     n 210.00   3.00      0.00 #> 18:                Physics     p  22.11   0.32      0.00 #> 19:                Physics p_col  24.17   5.56      0.00 #> 20:                Physics p_row  98.59   1.41      0.00 #> 21: Physiology or Medicine     n 207.00  12.00      0.00 #> 22: Physiology or Medicine     p  21.79   1.26      0.00 #> 23: Physiology or Medicine p_col  23.82  22.22      0.00 #> 24: Physiology or Medicine p_row  94.52   5.48      0.00 #>                   category stats   male female <missing>   # Two variable as rows pivot_table(nobel_laureates, rows = c(\"birth_continent\", \"category\"), cols = \"gender\") #>      birth_continent               category stats   male female <missing> #>   1:          Europe              Chemistry     n 101.00   2.00      0.00 #>   2:          Europe              Chemistry     p  10.63   0.21      0.00 #>   3:          Europe              Chemistry p_col  11.62   3.70      0.00 #>   4:          Europe              Chemistry p_row  98.06   1.94      0.00 #>   5:          Europe      Economic Sciences     n  29.00   1.00      0.00 #>  ---                                                                      #> 220:           Total Physiology or Medicine p_row  94.52   5.48      0.00 #> 221:           Total                  Total     n 869.00  54.00     27.00 #> 222:           Total                  Total     p  91.47   5.68      2.84 #> 223:           Total                  Total p_col 100.00 100.00    100.00 #> 224:           Total                  Total p_row  91.47   5.68      2.84 #>       Total #>   1: 103.00 #>   2:  10.84 #>   3:  10.84 #>   4: 100.00 #>   5:  30.00 #>  ---        #> 220: 100.00 #> 221: 950.00 #> 222: 100.00 #> 223: 100.00 #> 224: 100.00  # Two variable as cols pivot_table(nobel_laureates, rows = \"category\", cols = c(\"gender\", \"laureate_type\")) #>                   category stats male_|_Individual male_|_Organisation #>  1:              Chemistry     n            179.00                   0 #>  2:              Chemistry     p             18.84                   0 #>  3:              Chemistry p_col             20.60                   0 #>  4:              Chemistry p_row             97.28                   0 #>  5:      Economic Sciences     n             82.00                   0 #>  6:      Economic Sciences     p              8.63                   0 #>  7:      Economic Sciences p_col              9.44                   0 #>  8:      Economic Sciences p_row             97.62                   0 #>  9:             Literature     n            101.00                   0 #> 10:             Literature     p             10.63                   0 #> 11:             Literature p_col             11.62                   0 #> 12:             Literature p_row             87.07                   0 #> 13:                  Peace     n             90.00                   0 #> 14:                  Peace     p              9.47                   0 #> 15:                  Peace p_col             10.36                   0 #> 16:                  Peace p_row             67.16                   0 #> 17:                Physics     n            210.00                   0 #> 18:                Physics     p             22.11                   0 #> 19:                Physics p_col             24.17                   0 #> 20:                Physics p_row             98.59                   0 #> 21: Physiology or Medicine     n            207.00                   0 #> 22: Physiology or Medicine     p             21.79                   0 #> 23: Physiology or Medicine p_col             23.82                   0 #> 24: Physiology or Medicine p_row             94.52                   0 #> 25:                  Total     n            869.00                   0 #> 26:                  Total     p             91.47                   0 #> 27:                  Total p_col            100.00                   0 #> 28:                  Total p_row             91.47                   0 #>                   category stats male_|_Individual male_|_Organisation #>     male_|_Total female_|_Individual female_|_Organisation female_|_Total #>  1:       179.00                5.00                     0           5.00 #>  2:        18.84                0.53                     0           0.53 #>  3:        20.60                9.26                     0           9.26 #>  4:        97.28                2.72                     0           2.72 #>  5:        82.00                2.00                     0           2.00 #>  6:         8.63                0.21                     0           0.21 #>  7:         9.44                3.70                     0           3.70 #>  8:        97.62                2.38                     0           2.38 #>  9:       101.00               15.00                     0          15.00 #> 10:        10.63                1.58                     0           1.58 #> 11:        11.62               27.78                     0          27.78 #> 12:        87.07               12.93                     0          12.93 #> 13:        90.00               17.00                     0          17.00 #> 14:         9.47                1.79                     0           1.79 #> 15:        10.36               31.48                     0          31.48 #> 16:        67.16               12.69                     0          12.69 #> 17:       210.00                3.00                     0           3.00 #> 18:        22.11                0.32                     0           0.32 #> 19:        24.17                5.56                     0           5.56 #> 20:        98.59                1.41                     0           1.41 #> 21:       207.00               12.00                     0          12.00 #> 22:        21.79                1.26                     0           1.26 #> 23:        23.82               22.22                     0          22.22 #> 24:        94.52                5.48                     0           5.48 #> 25:       869.00               54.00                     0          54.00 #> 26:        91.47                5.68                     0           5.68 #> 27:       100.00              100.00                     0         100.00 #> 28:        91.47                5.68                     0           5.68 #>     male_|_Total female_|_Individual female_|_Organisation female_|_Total #>     <missing>_|_Individual <missing>_|_Organisation <missing>_|_Total #>  1:                      0                     0.00              0.00 #>  2:                      0                     0.00              0.00 #>  3:                      0                     0.00              0.00 #>  4:                      0                     0.00              0.00 #>  5:                      0                     0.00              0.00 #>  6:                      0                     0.00              0.00 #>  7:                      0                     0.00              0.00 #>  8:                      0                     0.00              0.00 #>  9:                      0                     0.00              0.00 #> 10:                      0                     0.00              0.00 #> 11:                      0                     0.00              0.00 #> 12:                      0                     0.00              0.00 #> 13:                      0                    27.00             27.00 #> 14:                      0                     2.84              2.84 #> 15:                      0                   100.00            100.00 #> 16:                      0                    20.15             20.15 #> 17:                      0                     0.00              0.00 #> 18:                      0                     0.00              0.00 #> 19:                      0                     0.00              0.00 #> 20:                      0                     0.00              0.00 #> 21:                      0                     0.00              0.00 #> 22:                      0                     0.00              0.00 #> 23:                      0                     0.00              0.00 #> 24:                      0                     0.00              0.00 #> 25:                      0                    27.00             27.00 #> 26:                      0                     2.84              2.84 #> 27:                      0                   100.00            100.00 #> 28:                      0                     2.84              2.84 #>     <missing>_|_Individual <missing>_|_Organisation <missing>_|_Total #>     Total_|_Individual Total_|_Organisation Total_|_Total #>  1:             184.00                 0.00        184.00 #>  2:              19.37                 0.00         19.37 #>  3:              19.93                 0.00         19.37 #>  4:             100.00                 0.00        100.00 #>  5:              84.00                 0.00         84.00 #>  6:               8.84                 0.00          8.84 #>  7:               9.10                 0.00          8.84 #>  8:             100.00                 0.00        100.00 #>  9:             116.00                 0.00        116.00 #> 10:              12.21                 0.00         12.21 #> 11:              12.57                 0.00         12.21 #> 12:             100.00                 0.00        100.00 #> 13:             107.00                27.00        134.00 #> 14:              11.26                 2.84         14.11 #> 15:              11.59               100.00         14.11 #> 16:              79.85                20.15        100.00 #> 17:             213.00                 0.00        213.00 #> 18:              22.42                 0.00         22.42 #> 19:              23.08                 0.00         22.42 #> 20:             100.00                 0.00        100.00 #> 21:             219.00                 0.00        219.00 #> 22:              23.05                 0.00         23.05 #> 23:              23.73                 0.00         23.05 #> 24:             100.00                 0.00        100.00 #> 25:             923.00                27.00        950.00 #> 26:              97.16                 2.84        100.00 #> 27:             100.00               100.00        100.00 #> 28:              97.16                 2.84        100.00 #>     Total_|_Individual Total_|_Organisation Total_|_Total   # Round pivot_table(nobel_laureates, rows = \"category\", digits = 0) #>                  category   n   p #> 1:              Chemistry 184  19 #> 2:      Economic Sciences  84   9 #> 3:             Literature 116  12 #> 4:                  Peace 134  14 #> 5:                Physics 213  22 #> 6: Physiology or Medicine 219  23 #> 7:                  Total 950 100  # Without cols pivot_table(nobel_laureates, rows = \"category\") #>                  category   n      p #> 1:              Chemistry 184  19.37 #> 2:      Economic Sciences  84   8.84 #> 3:             Literature 116  12.21 #> 4:                  Peace 134  14.11 #> 5:                Physics 213  22.42 #> 6: Physiology or Medicine 219  23.05 #> 7:                  Total 950 100.00 pivot_table(nobel_laureates, rows = c(\"category\", \"birth_continent\")) #>                   category birth_continent   n      p #>  1:              Chemistry          Europe 103  10.84 #>  2:              Chemistry         Oceania   3   0.32 #>  3:              Chemistry   North America  59   6.21 #>  4:              Chemistry          Africa   3   0.32 #>  5:              Chemistry            Asia  16   1.68 #>  6:              Chemistry   South America   0   0.00 #>  7:              Chemistry       <missing>   0   0.00 #>  8:              Chemistry           Total 184  19.37 #>  9:      Economic Sciences          Europe  30   3.16 #> 10:      Economic Sciences         Oceania   0   0.00 #> 11:      Economic Sciences   North America  51   5.37 #> 12:      Economic Sciences          Africa   0   0.00 #> 13:      Economic Sciences            Asia   3   0.32 #> 14:      Economic Sciences   South America   0   0.00 #> 15:      Economic Sciences       <missing>   0   0.00 #> 16:      Economic Sciences           Total  84   8.84 #> 17:             Literature          Europe  80   8.42 #> 18:             Literature         Oceania   0   0.00 #> 19:             Literature   North America  16   1.68 #> 20:             Literature          Africa   6   0.63 #> 21:             Literature            Asia  10   1.05 #> 22:             Literature   South America   4   0.42 #> 23:             Literature       <missing>   0   0.00 #> 24:             Literature           Total 116  12.21 #> 25:                  Peace          Europe  53   5.58 #> 26:                  Peace         Oceania   2   0.21 #> 27:                  Peace   North America  23   2.42 #> 28:                  Peace          Africa  13   1.37 #> 29:                  Peace            Asia  13   1.37 #> 30:                  Peace   South America   3   0.32 #> 31:                  Peace       <missing>  27   2.84 #> 32:                  Peace           Total 134  14.11 #> 33:                Physics          Europe 114  12.00 #> 34:                Physics         Oceania   2   0.21 #> 35:                Physics   North America  75   7.89 #> 36:                Physics          Africa   2   0.21 #> 37:                Physics            Asia  20   2.11 #> 38:                Physics   South America   0   0.00 #> 39:                Physics       <missing>   0   0.00 #> 40:                Physics           Total 213  22.42 #> 41: Physiology or Medicine          Europe 114  12.00 #> 42: Physiology or Medicine         Oceania   8   0.84 #> 43: Physiology or Medicine   North America  80   8.42 #> 44: Physiology or Medicine          Africa   3   0.32 #> 45: Physiology or Medicine            Asia  10   1.05 #> 46: Physiology or Medicine   South America   4   0.42 #> 47: Physiology or Medicine       <missing>   0   0.00 #> 48: Physiology or Medicine           Total 219  23.05 #> 49:                  Total          Europe 494  52.00 #> 50:                  Total         Oceania  15   1.58 #> 51:                  Total   North America 304  32.00 #> 52:                  Total          Africa  27   2.84 #> 53:                  Total            Asia  72   7.58 #> 54:                  Total   South America  11   1.16 #> 55:                  Total       <missing>  27   2.84 #> 56:                  Total           Total 950 100.00 #>                   category birth_continent   n      p"},{"path":"https://dreamrs.github.io/flexpivot/reference/unpivot.html","id":null,"dir":"Reference","previous_headings":"","what":"Unpivot — unpivot","title":"Unpivot — unpivot","text":"pivot_table object put column(s) back rows.","code":""},{"path":"https://dreamrs.github.io/flexpivot/reference/unpivot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unpivot — unpivot","text":"","code":"unpivot(x)"},{"path":"https://dreamrs.github.io/flexpivot/reference/unpivot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unpivot — unpivot","text":"x pivot_table object.","code":""},{"path":"https://dreamrs.github.io/flexpivot/reference/unpivot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unpivot — unpivot","text":"data.table.","code":""},{"path":"https://dreamrs.github.io/flexpivot/reference/unpivot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unpivot — unpivot","text":"","code":"library(flexpivot) library(magrittr) data(\"nobel_laureates\")  # Revert format nobel_laureates %>%   pivot_table(     rows = \"category\",     cols = c(\"gender\", \"birth_continent\")   ) %>%   unpivot() #>                    category gender birth_continent stats  value #>   1:              Chemistry   male          Europe     n 101.00 #>   2:              Chemistry   male          Europe     p  10.63 #>   3:              Chemistry   male          Europe p_col  21.49 #>   4:              Chemistry   male          Europe p_row  54.89 #>   5:      Economic Sciences   male          Europe     n  29.00 #>  ---                                                            #> 892: Physiology or Medicine  Total           Total p_row 100.00 #> 893:                  Total  Total           Total     n 950.00 #> 894:                  Total  Total           Total     p 100.00 #> 895:                  Total  Total           Total p_col 100.00 #> 896:                  Total  Total           Total p_row 100.00  nobel_laureates %>%   pivot_table(     rows = \"category\",     cols = \"birth_continent\"   ) %>%   unpivot() #>                    category birth_continent stats  value #>   1:              Chemistry          Europe     n 103.00 #>   2:              Chemistry          Europe     p  10.84 #>   3:              Chemistry          Europe p_col  20.85 #>   4:              Chemistry          Europe p_row  55.98 #>   5:      Economic Sciences          Europe     n  30.00 #>  ---                                                     #> 220: Physiology or Medicine           Total p_row 100.00 #> 221:                  Total           Total     n 950.00 #> 222:                  Total           Total     p 100.00 #> 223:                  Total           Total p_col 100.00 #> 224:                  Total           Total p_row 100.00"}]
